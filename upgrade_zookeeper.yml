---
- name: Zookeeper Upgrade - Prep
  hosts: zookeeper
  # Running serial=1 because add_host has problems
  # https://stackoverflow.com/questions/42106527/ansible-how-to-call-module-add-host-for-all-hosts-of-the-play
  serial: 1
  tags:
    - prep
  tasks:
    - import_role:
        name: confluent.variables

    - name: Zookeeper is Running
      systemd:
        name: "{{zookeeper_service_name}}"
        state: started

    - name: Zookeeper Health Check
      import_role:
        name: confluent.zookeeper
        tasks_from: health_check.yml
      when: not ansible_check_mode

    - name: Get Package Facts
      package_facts:
        manager: auto

    - set_fact:
        confluent_server_enabled: true
      when: ansible_facts.packages['confluent-server'] is defined

    - set_fact:
        confluent_server_enabled: false
      when: ansible_facts.packages['confluent-kafka-2.12'] is defined or ansible_facts.packages['confluent-kafka'] is defined

    - set_fact:
        confluent_kafka_upgraded: true
      when: ansible_facts.packages['confluent-kafka'] is defined

    - set_fact:
        confluent_kafka_upgraded: false
      when: ansible_facts.packages['confluent-kafka'] is not defined

    - name: Set Current Package Version of confluent-server
      set_fact:
        zookeeper_current_version: "{{ ansible_facts.packages['confluent-server'][0]['version'] }}"
      when: confluent_server_enabled|bool

    - name: Set Current Package Version of confluent-kafka-2.12
      set_fact:
        zookeeper_current_version: "{{ ansible_facts.packages['confluent-kafka-2.12'][0]['version'] }}"
      when: not confluent_server_enabled|bool and not confluent_kafka_upgraded|bool

    - name: Set Current Package Version of confluent-kafka
      set_fact:
        zookeeper_current_version: "{{ ansible_facts.packages['confluent-kafka'][0]['version'] }}"
      when: not confluent_server_enabled|bool and confluent_kafka_upgraded|bool

    - debug:
        msg: "Current version: {{zookeeper_current_version}}   Upgrade to version: {{confluent_package_version}}"

    - name: Get Leader/Follower
      shell: "{{zookeeper_health_check_command}} | grep Mode"
      args:
        executable: /bin/bash
      register: leader_query
      changed_when: false
      check_mode: false

    - name: Add host to Follower Group
      add_host:
        name: "{{ inventory_hostname }}"
        group: upgrade_zookeeper_followers
      delegate_to: localhost
      when:
        - '"follower" in leader_query.stdout'
        - zookeeper_current_version != confluent_full_package_version
        - zookeeper_current_version != confluent_package_version

    - name: Add host to Leader Group
      add_host:
        name: "{{ inventory_hostname }}"
        group: upgrade_zookeeper_leader
      delegate_to: localhost
      when:
        - '"leader" in leader_query.stdout'
        - zookeeper_current_version != confluent_full_package_version
        - zookeeper_current_version != confluent_package_version

    - debug:
        msg: "Leader: {{inventory_hostname}}"
      when: '"leader" in leader_query.stdout'

- name: Zookeeper Upgrade
  # Putting leader group last here with serial=1 so the leader runs last
  hosts: upgrade_zookeeper_followers,upgrade_zookeeper_leader
  environment: "{{ proxy_env }}"
  serial: 1
  tags:
    - upgrade
  tasks:
    - import_role:
        name: confluent.variables

    - name: Create Backup Directory
      file:
        path: "/tmp/upgrade/{{ zookeeper_service_name }}"
        state: directory
        mode: 0640

    - set_fact:
        timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

    - name: Backup Configuration files
      copy:
        src: "{{ item }}"
        remote_src: true
        dest: "/tmp/upgrade/{{ zookeeper_service_name }}/{{ item | basename }}-{{timestamp}}"
      loop:
        - "{{ zookeeper.config_file }}"
        - "{{ zookeeper.systemd_override }}"
        - "{{ kafka_broker.config_file }}"
      # Files cannot be copied because directory is not created in check mode
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Stop Service
      systemd:
        name: "{{ zookeeper_service_name }}"
        state: stopped

    - name: Wait for Zookeeper Status on Another Zookeeper Node
      import_role:
        name: confluent.zookeeper
        tasks_from: health_check.yml
      delegate_to: "{{ groups['zookeeper'] | difference([inventory_hostname]) | first }}"
      when: not ansible_check_mode

    - name: Configure Repositories
      import_role:
        name: confluent.common
      vars:
        install_java: false

    - name: Remove Confluent-Kafka Packages - Red Hat
      yum:
        name: confluent-kafka-2.12
        state: absent
      when:
        - ansible_os_family == "RedHat"
        - not confluent_server_enabled|bool
      # Packages will not be found in check mode because repos not changed
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Remove Confluent-Kafka Packages - Debian
      apt:
        name: confluent-kafka-2.12
        state: absent
      when:
        - ansible_os_family == "Debian"
        - not confluent_server_enabled|bool
      # Packages will not be found in check mode because repos not changed
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Install the Packages - Red Hat
      yum:
        name: "{{item}}{{confluent_package_redhat_suffix}}"
        state: latest
        update_cache: true
      loop: "{{ zookeeper_packages }}"
      when: ansible_os_family == "RedHat"
      # Packages will not be found in check mode because repos not changed
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Install the Packages - Debian
      apt:
        name: "{{item}}{{confluent_package_debian_suffix}}"
        update_cache: true
      loop: "{{ zookeeper_packages }}"
      when: ansible_os_family == "Debian"
      # Packages will not be found in check mode because repos not changed
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Put back configuration
      copy:
        dest: "{{ item }}"
        remote_src: true
        src: "/tmp/upgrade/{{ zookeeper_service_name }}/{{ item | basename }}-{{timestamp}}"
      loop:
        - "{{ zookeeper.config_file }}"
        - "{{ kafka_broker.config_file }}"
      # Files cannot be copied because directory is not created in check mode
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Add Disable Admin Server Property
      lineinfile:
        name: "{{zookeeper.config_file}}"
        line: admin.enableServer=false
        regexp: admin.enableServer=.*

    - name: Restart Service
      systemd:
        daemon_reload: true
        name: "{{ zookeeper_service_name }}"
        state: restarted

    - name: Zookeeper Health Check
      import_role:
        name: confluent.zookeeper
        tasks_from: health_check.yml
      when: not ansible_check_mode
